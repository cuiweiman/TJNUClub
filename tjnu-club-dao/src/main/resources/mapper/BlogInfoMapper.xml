<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjnu.club.mapper.BlogInfoMapper">
    <resultMap id="BaseResultMap" type="com.tjnu.club.info.BlogInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="blog_id" jdbcType="VARCHAR" property="blogId"/>
        <result column="blog_name" jdbcType="VARCHAR" property="blogName"/>
        <result column="blog_content" jdbcType="VARCHAR" property="blogContent"/>
        <result column="category_id" jdbcType="VARCHAR" property="categoryId"/>
        <result column="top_blog" jdbcType="INTEGER" property="topBlog"/>
        <result column="parent_blog_id" jdbcType="VARCHAR" property="parentBlogId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="read_times" jdbcType="INTEGER" property="readTimes"/>
        <result column="zan_times" jdbcType="INTEGER" property="zanTimes"/>
        <result column="is_deleted" jdbcType="BIGINT" property="isDeleted"/>
    </resultMap>

    <resultMap id="UserBlogInfo" type="com.tjnu.club.info.UserBlogInfo">
        <association property="blogInfo" resultMap="BaseResultMap" javaType="com.tjnu.club.info.BlogInfo"/>
        <association property="userInfo" javaType="com.tjnu.club.info.UserInfo">
            <result column="user_id" jdbcType="VARCHAR" property="userId"/>
            <result column="user_img" jdbcType="VARCHAR" property="userImg"/>
            <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="description" jdbcType="VARCHAR" property="description"/>
        </association>
    </resultMap>

    <sql id="BaseColumn">
        id,gmt_create,gmt_modified,blog_id,blog_name,blog_content,category_id,top_blog,parent_blog_id,user_id,read_times,zan_times,is_deleted
    </sql>

    <insert id="saveBlogInfo">
        INSERT INTO blog_info
        <set>
            blog_id = #{blogId},
            <if test="topBlog == 0">
                blog_name = #{blogName},
            </if>
            blog_content = #{blogContent},
            category_id = #{categoryId},
            top_blog = #{topBlog},
            <if test="topBlog == 1">
                parent_blog_id = #{parentBlogId},
            </if>
            user_id = #{userId},
            is_deleted = 0
        </set>
    </insert>

    <update id="updateBlogInfo">
        UPDATE blog_info
        <set>
            <if test="blogName!=null and topBlog == 0">
                blog_name = #{blogName},
            </if>
            <if test="blogContent!=null">
                blog_content = #{blogContent},
            </if>
            <if test="categoryId!=null">
                category_id = #{categoryId},
            </if>
            <if test="topBlog!=null">
                top_blog = #{topBlog},
            </if>
            <if test="topBlog==1 and parentBlogId!=null">
                parent_blog_id = #{parentBlogId},
            </if>
        </set>
        WHERE blog_id = #{blogId} AND is_deleted = 0 AND user_id = #{userId}
    </update>

    <update id="deleteBlogInfo">
        UPDATE blog_info
        <set>
            is_deleted = UNIX_TIMESTAMP()
        </set>
        WHERE is_deleted = 0 AND (blog_id = #{blogId} OR parent_blog_id = #{blogId} )

    </update>

    <select id="countMainBlogInfoByCategoryId" resultType="java.lang.Long">
        SELECT COUNT(blog_id)
        FROM blog_info
        WHERE category_id=#{categoryId} AND is_deleted=0 AND top_blog=0
    </select>

    <select id="listMainBlogInfoByCategoryId" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumn"/>
        FROM blog_info
        WHERE category_id=#{categoryId} AND is_deleted=0 AND top_blog=0
        ORDER BY gmt_create DESC
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <select id="listBlogInfoTopN" resultMap="BaseResultMap">
        SELECT a.*
        FROM `blog_info` a JOIN `blog_info` b ON a.`blog_id`=b.`parent_blog_id` AND b.`is_deleted`=0
        WHERE  b.`is_deleted`=0 AND b.`top_blog` = 1 AND b.`gmt_create` &gt;= #{begin} AND b.`gmt_create` &lt; #{end}
        GROUP BY b.`parent_blog_id`
        ORDER BY COUNT(b.`blog_id`) DESC
        LIMIT #{topN}
    </select>

    <select id="getMainBlogInfoByBlogId" resultMap="UserBlogInfo">
        SELECT u.user_id,u.user_img,u.nick_name,u.email,u.description,b.*
        FROM `blog_info` b LEFT JOIN `user_info` u ON b.`user_id`=u.`user_id`
        WHERE b.blog_id = #{blogId} AND b.is_deleted = 0 AND b.top_blog=0;
    </select>

    <select id="countChildBlogInfoByBlogId" resultType="java.lang.Long">
        SELECT COUNT(b.`blog_id`)
        FROM `blog_info` b LEFT JOIN `user_info` u ON b.`user_id`=u.`user_id`
        WHERE b.`parent_blog_id`=#{blogId} AND b.`is_deleted`=0 AND b.`top_blog`=1
        ORDER BY b.`gmt_create` ASC
    </select>

    <select id="listChildBlogInfoByBlogId" resultMap="UserBlogInfo">
        SELECT u.user_id,u.user_img,u.nick_name,u.email,u.description,b.*
        FROM `blog_info` b LEFT JOIN `user_info` u ON b.`user_id`=u.`user_id`
        WHERE b.`parent_blog_id`=#{blogId} AND b.`is_deleted`=0 AND b.`top_blog`=1
        ORDER BY b.`gmt_create` ASC
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <select id="countBlogInfoByUserId" resultType="java.lang.Long">
        SELECT COUNT(b.`blog_id`)
        FROM `user_info` u LEFT JOIN `blog_info`  b ON u.`user_id`=b.`user_id`
        WHERE u.`user_id`=#{userId} AND b.`top_blog` = 0 AND b.`is_deleted`=0
    </select>

    <select id="listBlogInfoByUserId" resultMap="BaseResultMap">
        SELECT b.*
        FROM `user_info` u LEFT JOIN `blog_info`  b ON u.`user_id`=b.`user_id`
        WHERE u.`user_id`=#{userId} AND b.`top_blog` = 0 AND b.`is_deleted`=0
        ORDER BY b.`gmt_create` DESC
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <insert id="blogCollected">
        INSERT INTO `user_blog_collected`
        <set>
            user_id = #{userId},
            blog_id = #{blogId}
        </set>
    </insert>

    <update id="blogCollectedCancel">
        UPDATE `user_blog_collected`
        <set>
            is_deleted = UNIX_TIMESTAMP()
        </set>
        WHERE user_id = #{userId} AND blog_id = #{blogId} AND is_deleted = 0
    </update>

    <select id="countBlogInfoCollected" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM `user_blog_collected` u LEFT JOIN `blog_info` b ON u.`blog_id`=b.`blog_id` AND b.`is_deleted`=0
        WHERE u.user_id = #{userId} AND u.is_deleted = 0
    </select>

    <select id="listBlogInfoCollected" resultMap="BaseResultMap">
        SELECT b.*
        FROM `user_blog_collected` u LEFT JOIN `blog_info` b ON u.`blog_id`=b.`blog_id` AND b.`is_deleted`=0
        WHERE u.user_id = #{userId} AND u.is_deleted = 0
        ORDER BY u.gmt_create DESC
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <select id="getBlogInfoByBlogId" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumn"/>
        FROM `blog_info`
        WHERE blog_id=#{blogId} AND is_deleted=0
    </select>

    <select id="getBlogInfoByBlogName" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumn"/>
        FROM `blog_info`
        WHERE blog_name=#{blogName} AND is_deleted=0
        <if test="blogId!=null">
            AND blog_id != #{blogId}
        </if>
    </select>

    <select id="getBlogInfoCollected" resultMap="BaseResultMap">
        SELECT b.*
        FROM `user_blog_collected` u LEFT JOIN `blog_info` b ON u.`blog_id`=b.`blog_id` AND b.`is_deleted`=0
        WHERE u.user_id = #{userId} AND u.blog_id = #{blogId} AND u.is_deleted = 0
    </select>

</mapper>